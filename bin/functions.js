Bridge.assembly("greekum",function($asm,globals){"use strict";Bridge.define("IProvider",{$kind:"interface"});Bridge.define("GreekumIpsum",{fields:{alphabet:null,wordPropertyProvider:null,probability:null,lastAlphabetLetter:0,randomGenerator:null,startingZero:!1,errored:!1},ctors:{init:function(){this.randomGenerator=new System.Random.ctor;this.startingZero=!1;this.errored=!1},ctor:function(startClean){this.$initialize();startClean?(this.alphabet=new CleanGreekAlphabet,this.wordPropertyProvider=new CleanGreekWordPropertyProvider,this.probability=new GreekProbability,this.startingZero=!0):(this.alphabet=new GreekAlphabet,this.wordPropertyProvider=new GreekWordPropertyProvider,this.probability=new GreekProbability)}},methods:{NextCharacter:function(){var $t,$t1,n;try{var r=this.randomGenerator.NextDouble(),sum=0,idx=0;$t=Bridge.getEnumerator(this.alphabet.IAlphabet$GetAlphabet());try{while($t.moveNext())if(n=$t.Current,r<=(sum=sum+($t1=this.probability.IProbability$GetLetterProbability(this.alphabet))[System.Array.index(Bridge.identity(idx,idx=idx+1|0),$t1)]))return this.lastAlphabetLetter===n?this.NextCharacter():(this.lastAlphabetLetter=n,n)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}this.errored=!0}catch(e){e=System.Exception.create(e);this.errored=!0}return 63},NextWord:function(){var $t,$t1,obj,i;try{var runningtotal=0,randValue=this.randomGenerator.NextDouble(),length=5,idx=0,word="";$t=Bridge.getEnumerator(this.wordPropertyProvider.IWordPropertyProvider$GetWordLengths());try{while($t.moveNext()){if(obj=$t.Current,runningtotal+=($t1=this.probability.IProbability$GetWordProbability(this.wordPropertyProvider))[System.Array.index(idx,$t1)],runningtotal>randValue){length=obj;break}idx=idx+1|0}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}for(i=0;i<length;i=i+1|0)word=(word||"")+String.fromCharCode(String.fromCharCode(this.NextCharacter()).toLowerCase().charCodeAt(0));return word}catch(e){e=System.Exception.create(e);this.errored=!0}return"???"},NextWord$1:function(amount){for(var ret="",i=0;i<amount;i=i+1|0)ret=(ret||"")+(this.NextWord()||""),ret=(ret||"")+" ";return ret},NextSentence:function(isStartOfWord){var $t,sentence,length,wrd,idx;try{for(sentence="",length=this.randomGenerator.Next$2(2,6),isStartOfWord&&(length=length-1|0,wrd=($t=this.NextWord(),System.String.toCharArray($t,0,$t.length)),wrd[System.Array.index(0,wrd)]=String.fromCharCode(wrd[System.Array.index(0,wrd)]).toUpperCase().charCodeAt(0),sentence=(sentence||"")+(System.String.fromCharArray(wrd)||""),sentence=(sentence||"")+" "),idx=0;idx<length;idx=idx+1|0)sentence=(sentence||"")+(this.NextWord()||""),sentence=(sentence||"")+" ";return sentence=System.String.remove(sentence,sentence.length-1|0),this.randomGenerator.Next()%2==0?sentence=(sentence||"")+". ":(sentence=(sentence||"")+", ",sentence=(sentence||"")+(this.NextSentence(!1)||"")),sentence}catch(e){e=System.Exception.create(e);this.errored=!0}return"???"},NextSentence$1:function(isStartOfWord,amount){for(var ret="",i=0;i<amount;i=i+1|0)ret=(ret||"")+(this.NextSentence(isStartOfWord)||"");return ret},NextParagraph:function(){try{return"\t"+(this.NextSentence$1(!0,this.randomGenerator.Next()%15+12|0)||"")}catch(e){e=System.Exception.create(e);this.errored=!0}return"???"},HasErrored:function(){return this.errored},ClearError:function(){this.errored=!1}}});Bridge.define("Test",{main:function(args){}});Bridge.define("IAlphabet",{inherits:[IProvider],$kind:"interface"});Bridge.define("IWordPropertyProvider",{inherits:[IProvider],$kind:"interface"});Bridge.define("IProbability",{inherits:[IProvider],$kind:"interface"});Bridge.define("CleanGreekAlphabet",{inherits:[IAlphabet],fields:{alphabetFrequencies:null},alias:["GetAlphabet","IAlphabet$GetAlphabet","GetTotalAlphabetLetterFrequency","IAlphabet$GetTotalAlphabetLetterFrequency","GetAlphabetLetterFrequencies","IAlphabet$GetAlphabetLetterFrequencies"],ctors:{init:function(){this.alphabetFrequencies=System.Array.init([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],System.Int32)}},methods:{GetAlphabet:function(){return"ΨΖΞΒΦΧΓΘΔΛΜΩΟΡΚΗΤΣΠΙΕΝΥΑ"},GetTotalAlphabetLetterFrequency:function(){for(var total=0,i=0;i<this.alphabetFrequencies.length;i=i+1|0)total=total+this.alphabetFrequencies[System.Array.index(i,this.alphabetFrequencies)]|0;return total},GetAlphabetLetterFrequencies:function(){return this.alphabetFrequencies}}});Bridge.define("CleanGreekWordPropertyProvider",{inherits:[IWordPropertyProvider],fields:{lengthFrequencies:null},alias:["GetWordLengthFrequencies","IWordPropertyProvider$GetWordLengthFrequencies","GetWordLengths","IWordPropertyProvider$GetWordLengths","GetTotalWordLengthsFrequencies","IWordPropertyProvider$GetTotalWordLengthsFrequencies"],ctors:{init:function(){this.lengthFrequencies=System.Array.init([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],System.Int32)}},methods:{GetWordLengthFrequencies:function(){return this.lengthFrequencies},GetWordLengths:function(){return System.Array.init([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],System.Int32)},GetTotalWordLengthsFrequencies:function(){for(var total=0,i=0;i<this.lengthFrequencies.length;i=i+1|0)total=total+this.lengthFrequencies[System.Array.index(i,this.lengthFrequencies)]|0;return total}}});Bridge.define("GreekAlphabet",{inherits:[IAlphabet],alias:["GetAlphabet","IAlphabet$GetAlphabet","GetTotalAlphabetLetterFrequency","IAlphabet$GetTotalAlphabetLetterFrequency","GetAlphabetLetterFrequencies","IAlphabet$GetAlphabetLetterFrequencies"],methods:{GetAlphabet:function(){return"ΨΖΞΒΦΧΓΘΔΛΜΩΟΡΚΗΤΣΠΙΕΝΥΑ"},GetTotalAlphabetLetterFrequency:function(){return 692976},GetAlphabetLetterFrequencies:function(){return System.Array.init([960,1389,2248,3667,4072,5329,10908,11331,12948,18595,20009,21946,21875,23529,24408,27460,40403,52241,52585,57469,66075,67953,68389,77187],System.Int32)}}});Bridge.define("GreekProbability",{inherits:[IProbability],alias:["GetWordProbability","IProbability$GetWordProbability","GetLetterProbability","IProbability$GetLetterProbability"],methods:{GetWordProbability:function(provider){for(var $t,probabilities=System.Array.init(26,0,System.Double),idx=0;idx<provider.IWordPropertyProvider$GetWordLengthFrequencies().length;idx=idx+1|0)probabilities[System.Array.index(idx,probabilities)]=($t=provider.IWordPropertyProvider$GetWordLengthFrequencies())[System.Array.index(idx,$t)]/provider.IWordPropertyProvider$GetTotalWordLengthsFrequencies();return probabilities},GetLetterProbability:function(provider){for(var $t,probabilities=System.Array.init(24,0,System.Double),idx=0;idx<provider.IAlphabet$GetAlphabetLetterFrequencies().length;idx=idx+1|0)probabilities[System.Array.index(idx,probabilities)]=($t=provider.IAlphabet$GetAlphabetLetterFrequencies())[System.Array.index(idx,$t)]/provider.IAlphabet$GetTotalAlphabetLetterFrequency();return probabilities}}});Bridge.define("GreekWordPropertyProvider",{inherits:[IWordPropertyProvider],alias:["GetWordLengthFrequencies","IWordPropertyProvider$GetWordLengthFrequencies","GetWordLengths","IWordPropertyProvider$GetWordLengths","GetTotalWordLengthsFrequencies","IWordPropertyProvider$GetTotalWordLengthsFrequencies"],methods:{GetWordLengthFrequencies:function(){return System.Array.init([0,0,5,3,5,16,35,60,89,114,132,136,126,103,73,48,29,16,9,4,2,1,0,0,0,0],System.Int32)},GetWordLengths:function(){return System.Array.init([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],System.Int32)},GetTotalWordLengthsFrequencies:function(){return 1005}}})});
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICJncmVla3VtLm1pbi5qcyIsCiAgInNvdXJjZVJvb3QiOiAiIiwKICAic291cmNlcyI6IFtdLAogICJuYW1lcyI6IFtdLAogICJtYXBwaW5ncyI6ICIiLAogICJzb3VyY2VzQ29udGVudCI6IFtdCn0K
Bridge.assembly("greekum",function($asm,globals){"use strict";var $m=Bridge.setMetadata,$n=["System"];$m("CleanGreekAlphabet",function(){return{att:1048576,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"GetAlphabet",t:8,sn:"GetAlphabet",rt:$n[0].String},{a:2,n:"GetAlphabetLetterFrequencies",t:8,sn:"GetAlphabetLetterFrequencies",rt:$n[0].Array.type(System.Int32)},{a:2,n:"GetTotalAlphabetLetterFrequency",t:8,sn:"GetTotalAlphabetLetterFrequency",rt:$n[0].Int32,box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"alphabetFrequencies",t:4,rt:$n[0].Array.type(System.Int32),sn:"alphabetFrequencies"}]}},$n);$m("CleanGreekWordPropertyProvider",function(){return{att:1048576,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"GetTotalWordLengthsFrequencies",t:8,sn:"GetTotalWordLengthsFrequencies",rt:$n[0].Int32,box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"GetWordLengthFrequencies",t:8,sn:"GetWordLengthFrequencies",rt:$n[0].Array.type(System.Int32)},{a:2,n:"GetWordLengths",t:8,sn:"GetWordLengths",rt:$n[0].Array.type(System.Int32)},{a:1,n:"lengthFrequencies",t:4,rt:$n[0].Array.type(System.Int32),sn:"lengthFrequencies"}]}},$n);$m("GreekAlphabet",function(){return{att:1048576,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"GetAlphabet",t:8,sn:"GetAlphabet",rt:$n[0].String},{a:2,n:"GetAlphabetLetterFrequencies",t:8,sn:"GetAlphabetLetterFrequencies",rt:$n[0].Array.type(System.Int32)},{a:2,n:"GetTotalAlphabetLetterFrequency",t:8,sn:"GetTotalAlphabetLetterFrequency",rt:$n[0].Int32,box:function($v){return Bridge.box($v,System.Int32)}}]}},$n);$m("GreekProbability",function(){return{att:1048576,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"GetLetterProbability",t:8,pi:[{n:"provider",pt:IAlphabet,ps:0}],sn:"GetLetterProbability",rt:$n[0].Array.type(System.Double),p:[IAlphabet]},{a:2,n:"GetWordProbability",t:8,pi:[{n:"provider",pt:IWordPropertyProvider,ps:0}],sn:"GetWordProbability",rt:$n[0].Array.type(System.Double),p:[IWordPropertyProvider]}]}},$n);$m("GreekumIpsum",function(){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,p:[$n[0].Boolean],pi:[{n:"startClean",pt:$n[0].Boolean,ps:0}],sn:"ctor"},{a:2,n:"ClearError",t:8,sn:"ClearError",rt:$n[0].Void},{a:2,n:"HasErrored",t:8,sn:"HasErrored",rt:$n[0].Boolean,box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"NextCharacter",t:8,sn:"NextCharacter",rt:$n[0].Char,box:function($v){return Bridge.box($v,System.Char,String.fromCharCode,System.Char.getHashCode)}},{a:2,n:"NextParagraph",t:8,sn:"NextParagraph",rt:$n[0].String},{a:2,n:"NextSentence",t:8,pi:[{n:"isStartOfWord",pt:$n[0].Boolean,ps:0}],sn:"NextSentence",rt:$n[0].String,p:[$n[0].Boolean]},{a:2,n:"NextSentence",t:8,pi:[{n:"isStartOfWord",pt:$n[0].Boolean,ps:0},{n:"amount",pt:$n[0].Int32,ps:1}],sn:"NextSentence$1",rt:$n[0].String,p:[$n[0].Boolean,$n[0].Int32]},{a:2,n:"NextWord",t:8,sn:"NextWord",rt:$n[0].String},{a:2,n:"NextWord",t:8,pi:[{n:"amount",pt:$n[0].Int32,ps:0}],sn:"NextWord$1",rt:$n[0].String,p:[$n[0].Int32]},{a:1,n:"alphabet",t:4,rt:IAlphabet,sn:"alphabet"},{a:1,n:"errored",t:4,rt:$n[0].Boolean,sn:"errored",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"lastAlphabetLetter",t:4,rt:$n[0].Char,sn:"lastAlphabetLetter",box:function($v){return Bridge.box($v,System.Char,String.fromCharCode,System.Char.getHashCode)}},{a:1,n:"probability",t:4,rt:IProbability,sn:"probability"},{a:1,n:"randomGenerator",t:4,rt:$n[0].Random,sn:"randomGenerator"},{a:1,n:"startingZero",t:4,rt:$n[0].Boolean,sn:"startingZero",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"wordPropertyProvider",t:4,rt:IWordPropertyProvider,sn:"wordPropertyProvider"}]}},$n);$m("GreekWordPropertyProvider",function(){return{att:1048576,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"GetTotalWordLengthsFrequencies",t:8,sn:"GetTotalWordLengthsFrequencies",rt:$n[0].Int32,box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"GetWordLengthFrequencies",t:8,sn:"GetWordLengthFrequencies",rt:$n[0].Array.type(System.Int32)},{a:2,n:"GetWordLengths",t:8,sn:"GetWordLengths",rt:$n[0].Array.type(System.Int32)}]}},$n);$m("IAlphabet",function(){return{att:160,a:4,m:[{ab:!0,a:2,n:"GetAlphabet",t:8,sn:"IAlphabet$GetAlphabet",rt:$n[0].String},{ab:!0,a:2,n:"GetAlphabetLetterFrequencies",t:8,sn:"IAlphabet$GetAlphabetLetterFrequencies",rt:$n[0].Array.type(System.Int32)},{ab:!0,a:2,n:"GetTotalAlphabetLetterFrequency",t:8,sn:"IAlphabet$GetTotalAlphabetLetterFrequency",rt:$n[0].Int32,box:function($v){return Bridge.box($v,System.Int32)}}]}},$n);$m("IProbability",function(){return{att:160,a:4,m:[{ab:!0,a:2,n:"GetLetterProbability",t:8,pi:[{n:"provider",pt:IAlphabet,ps:0}],sn:"IProbability$GetLetterProbability",rt:$n[0].Array.type(System.Double),p:[IAlphabet]},{ab:!0,a:2,n:"GetWordProbability",t:8,pi:[{n:"provider",pt:IWordPropertyProvider,ps:0}],sn:"IProbability$GetWordProbability",rt:$n[0].Array.type(System.Double),p:[IWordPropertyProvider]}]}},$n);$m("IProvider",function(){return{att:160,a:4}},$n);$m("IWordPropertyProvider",function(){return{att:160,a:4,m:[{ab:!0,a:2,n:"GetTotalWordLengthsFrequencies",t:8,sn:"IWordPropertyProvider$GetTotalWordLengthsFrequencies",rt:$n[0].Int32,box:function($v){return Bridge.box($v,System.Int32)}},{ab:!0,a:2,n:"GetWordLengthFrequencies",t:8,sn:"IWordPropertyProvider$GetWordLengthFrequencies",rt:$n[0].Array.type(System.Int32)},{ab:!0,a:2,n:"GetWordLengths",t:8,sn:"IWordPropertyProvider$GetWordLengths",rt:$n[0].Array.type(System.Int32)}]}},$n);$m("Test",function(){return{att:1048576,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Main",is:!0,t:8,pi:[{n:"args",pt:$n[0].Array.type(System.String),ps:0}],sn:"Main",rt:$n[0].Void,p:[$n[0].Array.type(System.String)]}]}},$n)});